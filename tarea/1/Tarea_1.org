#+TITLE: Tarea 1
#+author: Cristian Romero Andrade
#+options: toc:nil
#+language: es

#+latex_header_extra: \input{../../conf.tex}

* *What Is A Distributed Database? And Why Do You Need One?*

Una base de datos distribuida (DDB) son bases de datos que se almacenan
en distintos lugares, todas conectadas entre sí por un sistema de comunicaciones.
Estas bases de dato están configuradas de tal manera de que se comporte como
un solo sistema de base de datos, un sistema de base de datos distribuida consta
de sitios poco acoplados que no comparten componentes físicos


El articulo ve a detalle algunas arquitecturas empleadas para
la Bases de Datos transaccionales distribuidas, donde estas han
resuelto varios problemas de distribución de grandes cantidades de
información. Menciona tres arquitecturas tradicionales y un concepto
de distribución relativamente nuevo.
1. [[sec:1][Shared-Disk (Bases de datos de disco compartido)]]
2. [[sec:2][Shared-Nothing/Sharded (Nada compartido/fragmentado)]]
3. [[sec:3][Synchronous Replication (Replicación sincrónica)]]
4. [[sec:3][Durable Distributed Cache (Caché distribuida duradera)]]

** Shared Disk<<sec:1>>
Esta distribución consta de tener varios servidores con un mismo
clúster, donde cada servidor están cargando y almacenado páginas
de datos en el mismo subsistema de disco compartido,
esta arquitectura es excelente para sistemas con alta carga de trabajo.
Sin embargo, este beneficio puede llegar a ser un mismo impedimento ya que
la misma carga puede provocar un cuello de botella si la base de datos esta
limitada por las entradas y salidas del sistema.

Ejemplos de DBMS que usan esta arquitectura:
+ Oracle RAC.
+ DB2 PureScale.
** Shared-Nothing/Sharded<<sec:2>>
Esta distribución consiste en varios nodos con el mismo propósito, pero
sin compartir datos y procesos independientes, estos nodos están conectados
entre sí en cada uno de ellos tienen una copia del sistema del gestor de base
de datos. Esta arquitectura es útil y escalable, ya que se puede expandir de forma
casi indefinida. Al igual que la arquitectura anterior, sus bondades también pueden
llegar a ser un impedimento en su rendimiento, en este caso un buen diseño de
la BD es critico para la organización de las consultas y que esa este bien optimizada.

La mayoría de los DBMS NoSQL y las más recientes como MongoDB, CouchDB, VoltDB, etc.
usan esta arquitectura.
** Synchronous Replication<<sec:3>>
Esta forma de construir bases de datos, se podría considerar la más natural de diseñar
bases de datos distribuidas, en la cual consiste en confirmar una transacción en varias
ubicaciones antes de regresar un estado de éxito, si la confirmación falla, los cambios
no confirmados no cambian y se descartan. La gran desventaja de la replicación sincrónica
es el tiempo, ya que el nodo maestro tiene que esperar a los demás nodos la respuesta
de éxito para guardar los datos, esto puede llevar a una mala experiencia de usuario
por el tiempo de espera que este siente.

El articulo menciona de Google F1, la implementación de dicha distribución, sin embargo,
en el momento que se escribió el articulo F1 solo servia para Google y su Google Ads.
* Durable Distributed Cache<<sec:4>>
Resumiendo todo el curso de sistemas distribuidos en un apartado ablando sobre el DDC,
Esta arquitectura es de las que anula o minimiza los fallos de las distribuciones de
bases de datos que se hablaron anteriormente. Esta ofrece una gran solución que hasta
el momento solo era alcanzable por empresas a escala de Google o Facebook. Dicha
distribución ofrece lo siguiente:

+ Rendimiento de escalamiento horizontal.
+ Disponibilidad continua para un alto tiempo de actividad y actualizaciones en vivo.
+ Distribución geográfica a través de la expansión activa-activa en centros de datos.

Esta distribución resuelve varios problemas, a parte de la mencionadas anteriormente,
al ser una implementación basada en nube (actualmente NuoDB es una de las empresas que
ofertan esta solución), esta BD cuenta con un tamaño de virtualmente ilimitada,
con manejo de alta concurrencia y teniendo una latencia mínima.


Hemos visto varios enfoques de distribuciones de bases de datos, muchos de ellos han resuelto
problemas a lo largo de la historia con un gran éxito. aunque, muchos de estas soluciones no han
cumplido con una solución completa siendo en parte inalcanzables si no se cuenta con los recursos
similares a Facebook o a Google. Con DDC llega  la posibilidad de que cualquier organización cree
sistemas con semántica transaccional, capacidades bajo demanda y la capacidad de tener una funcionalidad
de varios años sin perder estabilidad.
